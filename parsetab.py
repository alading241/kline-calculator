
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftassignaddassignsubassignmulassigndivassignmodassignpowassignlsftassignrsftassignandassignorassignxorassignleftandorxorleftlessthanlessequelequalnotequalgreaterthangreaterequalleftquestioncolonleftlshiftrshiftleftaddsubtractleftmultiplydividemodulofloordivrightusubuaddnotleftfactorialleftpowerleftdotident newline integer pointfloat exponentfloat add subtract multiply divide floordiv modulo power factorial lshift rshift and not or xor lessthan lessequel equal notequal greaterthan greaterequal assign addassign subassign mulassign divassign modassign powassign lsftassign rsftassign andassign orassign xorassign lparen rparen comma question colon dot\n        expression : ident assign     expression\n                   | ident addassign  expression\n                   | ident subassign  expression\n                   | ident mulassign  expression\n                   | ident divassign  expression\n                   | ident modassign  expression\n                   | ident powassign  expression\n                   | ident lsftassign expression\n                   | ident rsftassign expression\n                   | ident andassign  expression\n                   | ident orassign   expression\n                   | ident xorassign  expression\n        \n        expression : expression add expression\n                   | expression subtract expression\n                   | expression multiply expression\n                   | expression divide expression\n                   | expression floordiv expression\n                   | expression or expression\n                   | expression xor expression\n                   | expression and expression\n                   | expression lessthan expression\n                   | expression lessequel expression\n                   | expression equal expression\n                   | expression notequal expression\n                   | expression greaterthan expression\n                   | expression greaterequal expression\n                   | expression lshift expression\n                   | expression rshift expression\n                   | expression modulo expression\n                   | expression power expression\n        expression : subtract expression %prec usub\n                      | add expression %prec uadd\n                      | not expression\n        expression : expression factorial\n        expression : functionfunction : ident lparen arguments rparenfunction : ident lparen rparen\n        arguments : expression comma arguments\n        \n        arguments : expression\n        expression : lparen expression rparen\n        expression : integer\n                   | float\n        float : pointfloat\n                 | exponentfloat\n        expression : identexpression : expression dot identexpression : ternaryternary : expression question expression colon expressionexpression : lparen ternary rparen\n        expression : expression comma expression\n                   | expression newline expression\n        '
    
_lr_action_items = {'and':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,31,-33,-32,-47,31,-31,-34,-49,-40,31,31,-37,31,31,31,31,31,31,31,31,31,31,31,-20,-24,-29,-16,-21,31,-27,-19,31,-13,-22,-28,-30,31,-15,-14,-26,-23,-17,-25,-18,-46,-36,31,-48,]),'notequal':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,32,-33,-32,-47,32,-31,-34,-49,-40,32,32,-37,32,32,32,32,32,32,32,32,32,32,32,32,-24,-29,-16,-21,32,-27,32,32,-13,-22,-28,-30,32,-15,-14,-26,-23,-17,-25,32,-46,-36,32,-48,]),'modulo':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,33,-33,-32,-47,33,-31,-34,-49,-40,33,33,-37,33,33,33,33,33,33,33,33,33,33,33,33,33,-29,-16,33,33,33,33,33,33,33,33,-30,33,-15,33,33,33,-17,33,33,-46,-36,33,33,]),'divide':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,34,-33,-32,-47,34,-31,-34,-49,-40,34,34,-37,34,34,34,34,34,34,34,34,34,34,34,34,34,-29,-16,34,34,34,34,34,34,34,34,-30,34,-15,34,34,34,-17,34,34,-46,-36,34,34,]),'divassign':([9,],[24,]),'multiply':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,46,-33,-32,-47,46,-31,-34,-49,-40,46,46,-37,46,46,46,46,46,46,46,46,46,46,46,46,46,-29,-16,46,46,46,46,46,46,46,46,-30,46,-15,46,46,46,-17,46,46,-46,-36,46,46,]),'lessthan':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,35,-33,-32,-47,35,-31,-34,-49,-40,35,35,-37,35,35,35,35,35,35,35,35,35,35,35,35,-24,-29,-16,-21,35,-27,35,35,-13,-22,-28,-30,35,-15,-14,-26,-23,-17,-25,35,-46,-36,35,-48,]),'comma':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,36,-33,-32,-47,36,-31,-34,-49,-40,-3,-7,-37,94,-12,-10,-6,-5,-8,-4,-9,-2,-11,-1,-20,-24,-29,-16,-21,36,-27,-19,36,-13,-22,-28,-30,36,-15,-14,-26,-23,-17,-25,-18,-46,-36,94,-48,]),'lshift':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,37,-33,-32,-47,37,-31,-34,-49,-40,37,37,-37,37,37,37,37,37,37,37,37,37,37,37,37,37,-29,-16,37,37,-27,37,37,-13,37,-28,-30,37,-15,-14,37,37,-17,37,37,-46,-36,37,37,]),'orassign':([9,],[29,]),'subassign':([9,],[18,]),'xor':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,38,-33,-32,-47,38,-31,-34,-49,-40,38,38,-37,38,38,38,38,38,38,38,38,38,38,38,-20,-24,-29,-16,-21,38,-27,-19,38,-13,-22,-28,-30,38,-15,-14,-26,-23,-17,-25,-18,-46,-36,38,-48,]),'question':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,39,-33,-32,-47,39,-31,-34,-49,-40,39,39,-37,39,39,39,39,39,39,39,39,39,39,39,39,39,-29,-16,39,39,-27,39,39,-13,39,-28,-30,39,-15,-14,39,39,-17,39,39,-46,-36,39,-48,]),'add':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,],[4,-42,4,-41,4,-35,-44,4,4,-45,-43,-47,40,-33,-32,-47,40,-31,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-34,4,4,4,4,4,4,4,4,-49,-40,40,40,-37,40,40,40,40,40,40,40,40,40,40,40,40,40,-29,-16,40,40,40,40,40,-13,40,40,-30,40,-15,-14,40,40,-17,40,40,-46,-36,4,4,40,40,]),'lessequel':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,41,-33,-32,-47,41,-31,-34,-49,-40,41,41,-37,41,41,41,41,41,41,41,41,41,41,41,41,-24,-29,-16,-21,41,-27,41,41,-13,-22,-28,-30,41,-15,-14,-26,-23,-17,-25,41,-46,-36,41,-48,]),'$end':([1,3,5,6,9,10,11,12,13,14,17,44,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,],[-42,-41,-35,-44,-45,-43,-47,0,-33,-32,-31,-34,-49,-40,-3,-7,-37,-12,-10,-6,-5,-8,-4,-9,-2,-11,-1,-20,-24,-29,-16,-21,-50,-27,-19,-13,-22,-28,-30,-51,-15,-14,-26,-23,-17,-25,-18,-46,-36,-48,]),'rsftassign':([9,],[27,]),'rshift':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,42,-33,-32,-47,42,-31,-34,-49,-40,42,42,-37,42,42,42,42,42,42,42,42,42,42,42,42,42,-29,-16,42,42,-27,42,42,-13,42,-28,-30,42,-15,-14,42,42,-17,42,42,-46,-36,42,42,]),'power':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,43,43,43,-47,43,43,-34,-49,-40,43,43,-37,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-30,43,43,43,43,43,43,43,43,-46,-36,43,43,]),'factorial':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,44,44,44,-47,44,44,-34,-49,-40,44,44,-37,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,44,44,44,44,44,44,44,44,-46,-36,44,44,]),'andassign':([9,],[22,]),'newline':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,45,-33,-32,-47,45,-31,-34,-49,-40,-3,-7,-37,45,-12,-10,-6,-5,-8,-4,-9,-2,-11,-1,-20,-24,-29,-16,-21,45,-27,-19,45,-13,-22,-28,-30,45,-15,-14,-26,-23,-17,-25,-18,-46,-36,45,-48,]),'exponentfloat':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'lsftassign':([9,],[25,]),'mulassign':([9,],[26,]),'lparen':([0,2,4,7,8,9,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[7,7,7,7,7,20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'addassign':([9,],[28,]),'not':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'integer':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'subtract':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,],[8,-42,8,-41,8,-35,-44,8,8,-45,-43,-47,47,-33,-32,-47,47,-31,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-34,8,8,8,8,8,8,8,8,-49,-40,47,47,-37,47,47,47,47,47,47,47,47,47,47,47,47,47,-29,-16,47,47,47,47,47,-13,47,47,-30,47,-15,-14,47,47,-17,47,47,-46,-36,8,8,47,47,]),'xorassign':([9,],[21,]),'powassign':([9,],[19,]),'greaterequal':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,48,-33,-32,-47,48,-31,-34,-49,-40,48,48,-37,48,48,48,48,48,48,48,48,48,48,48,48,-24,-29,-16,-21,48,-27,48,48,-13,-22,-28,-30,48,-15,-14,-26,-23,-17,-25,48,-46,-36,48,-48,]),'ident':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,94,95,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,92,9,9,]),'rparen':([1,3,5,6,9,10,11,13,14,15,16,17,20,44,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,97,98,],[-42,-41,-35,-44,-45,-43,-47,-33,-32,54,55,-31,59,-34,-49,-40,-3,-7,93,-37,-39,-12,-10,-6,-5,-8,-4,-9,-2,-11,-1,-20,-24,-29,-16,-21,-50,-27,-19,-13,-22,-28,-30,-51,-15,-14,-26,-23,-17,-25,-18,-46,-36,-38,-39,-48,]),'equal':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,49,-33,-32,-47,49,-31,-34,-49,-40,49,49,-37,49,49,49,49,49,49,49,49,49,49,49,49,-24,-29,-16,-21,49,-27,49,49,-13,-22,-28,-30,49,-15,-14,-26,-23,-17,-25,49,-46,-36,49,-48,]),'modassign':([9,],[23,]),'assign':([9,],[30,]),'floordiv':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,50,-33,-32,-47,50,-31,-34,-49,-40,50,50,-37,50,50,50,50,50,50,50,50,50,50,50,50,50,-29,-16,50,50,50,50,50,50,50,50,-30,50,-15,50,50,50,-17,50,50,-46,-36,50,50,]),'greaterthan':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,51,-33,-32,-47,51,-31,-34,-49,-40,51,51,-37,51,51,51,51,51,51,51,51,51,51,51,51,-24,-29,-16,-21,51,-27,51,51,-13,-22,-28,-30,51,-15,-14,-26,-23,-17,-25,51,-46,-36,51,-48,]),'dot':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,53,53,53,-47,53,53,-34,-49,-40,53,53,-37,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-46,-36,53,53,]),'colon':([1,3,5,6,9,10,11,13,14,17,44,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,],[-42,-41,-35,-44,-45,-43,-47,-33,-32,-31,-34,-49,-40,-3,-7,-37,-12,-10,-6,-5,-8,-4,-9,-2,-11,-1,-20,-24,-29,-16,-21,-50,-27,-19,95,-13,-22,-28,-30,-51,-15,-14,-26,-23,-17,-25,-18,-46,-36,-48,]),'or':([1,3,5,6,9,10,11,12,13,14,15,16,17,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,],[-42,-41,-35,-44,-45,-43,-47,52,-33,-32,-47,52,-31,-34,-49,-40,52,52,-37,52,52,52,52,52,52,52,52,52,52,52,-20,-24,-29,-16,-21,52,-27,-19,52,-13,-22,-28,-30,52,-15,-14,-26,-23,-17,-25,-18,-46,-36,52,-48,]),'pointfloat':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'float':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[12,13,14,16,17,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,97,98,]),'arguments':([20,94,],[58,96,]),'ternary':([0,2,4,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,94,95,],[11,11,11,15,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ident assign expression','expression',3,'p_expression_assign','calc.py',218),
  ('expression -> ident addassign expression','expression',3,'p_expression_assign','calc.py',219),
  ('expression -> ident subassign expression','expression',3,'p_expression_assign','calc.py',220),
  ('expression -> ident mulassign expression','expression',3,'p_expression_assign','calc.py',221),
  ('expression -> ident divassign expression','expression',3,'p_expression_assign','calc.py',222),
  ('expression -> ident modassign expression','expression',3,'p_expression_assign','calc.py',223),
  ('expression -> ident powassign expression','expression',3,'p_expression_assign','calc.py',224),
  ('expression -> ident lsftassign expression','expression',3,'p_expression_assign','calc.py',225),
  ('expression -> ident rsftassign expression','expression',3,'p_expression_assign','calc.py',226),
  ('expression -> ident andassign expression','expression',3,'p_expression_assign','calc.py',227),
  ('expression -> ident orassign expression','expression',3,'p_expression_assign','calc.py',228),
  ('expression -> ident xorassign expression','expression',3,'p_expression_assign','calc.py',229),
  ('expression -> expression add expression','expression',3,'p_expression_binop','calc.py',249),
  ('expression -> expression subtract expression','expression',3,'p_expression_binop','calc.py',250),
  ('expression -> expression multiply expression','expression',3,'p_expression_binop','calc.py',251),
  ('expression -> expression divide expression','expression',3,'p_expression_binop','calc.py',252),
  ('expression -> expression floordiv expression','expression',3,'p_expression_binop','calc.py',253),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calc.py',254),
  ('expression -> expression xor expression','expression',3,'p_expression_binop','calc.py',255),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calc.py',256),
  ('expression -> expression lessthan expression','expression',3,'p_expression_binop','calc.py',257),
  ('expression -> expression lessequel expression','expression',3,'p_expression_binop','calc.py',258),
  ('expression -> expression equal expression','expression',3,'p_expression_binop','calc.py',259),
  ('expression -> expression notequal expression','expression',3,'p_expression_binop','calc.py',260),
  ('expression -> expression greaterthan expression','expression',3,'p_expression_binop','calc.py',261),
  ('expression -> expression greaterequal expression','expression',3,'p_expression_binop','calc.py',262),
  ('expression -> expression lshift expression','expression',3,'p_expression_binop','calc.py',263),
  ('expression -> expression rshift expression','expression',3,'p_expression_binop','calc.py',264),
  ('expression -> expression modulo expression','expression',3,'p_expression_binop','calc.py',265),
  ('expression -> expression power expression','expression',3,'p_expression_binop','calc.py',266),
  ('expression -> subtract expression','expression',2,'p_expression_unary','calc.py',277),
  ('expression -> add expression','expression',2,'p_expression_unary','calc.py',278),
  ('expression -> not expression','expression',2,'p_expression_unary','calc.py',279),
  ('expression -> expression factorial','expression',2,'p_expression_factorial','calc.py',289),
  ('expression -> function','expression',1,'p_expression_func','calc.py',294),
  ('function -> ident lparen arguments rparen','function',4,'p_func_with_args','calc.py',298),
  ('function -> ident lparen rparen','function',3,'p_func_without_args','calc.py',314),
  ('arguments -> expression comma arguments','arguments',3,'p_arguments_plural','calc.py',322),
  ('arguments -> expression','arguments',1,'p_arguments_single','calc.py',329),
  ('expression -> lparen expression rparen','expression',3,'p_expression_group','calc.py',334),
  ('expression -> integer','expression',1,'p_expression_number','calc.py',339),
  ('expression -> float','expression',1,'p_expression_number','calc.py',340),
  ('float -> pointfloat','float',1,'p_float','calc.py',346),
  ('float -> exponentfloat','float',1,'p_float','calc.py',347),
  ('expression -> ident','expression',1,'p_expression_ident','calc.py',352),
  ('expression -> expression dot ident','expression',3,'p_expression_attr','calc.py',366),
  ('expression -> ternary','expression',1,'p_expression_ternary','calc.py',374),
  ('ternary -> expression question expression colon expression','ternary',5,'p_expression_question','calc.py',378),
  ('expression -> lparen ternary rparen','expression',3,'p_ternary_group','calc.py',382),
  ('expression -> expression comma expression','expression',3,'p_expression_nextline','calc.py',387),
  ('expression -> expression newline expression','expression',3,'p_expression_nextline','calc.py',388),
]
